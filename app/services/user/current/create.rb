# frozen_string_literal: true

# User::Current::Create handles {User} creation.
#
# Creation of a new {User} record generates a "User Token", which is actually
# just the GUID generated by the database ({User#id}). This token is then
# "permanently" stored into `cookies.signed[User::Current::COOKIE]` for future
# lookup of the "Current {User}".
class User::Current::Create
  include CallMethodBehaviors

  def initialize(context:) = @context = context

  def call
    User.create(user_agent:).tap { |new_user|
      delete_guest_token
      store_user_token(value: new_user.token)
    }
  end

  private

  attr_reader :context

  def user_agent = context.user_agent

  def delete_guest_token
    context.delete_cookie(Guest::Current::COOKIE)
  end

  def store_user_token(value:)
    context.store_signed_cookie(User::Current::COOKIE, value:)
  end
end
