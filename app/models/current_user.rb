# frozen_string_literal: true

# CurrentUser is a Service Object that is responsible for look-up/creation of
# {User} records.
# - Lookup is performed via the "User Token" stored in `cookies[:user_token]`.
# - Creation of a new {User} record generates a "User Token", which is actually
#   just the GUID generated by the DB ({User#id}). Which is then "permanently"
#   stored into `cookies[:user_token]` for future lookup.
class CurrentUser
  include CallMethodBehaviors

  def initialize(context:)
    @context = context
  end

  def call
    if stored_user_token?
      find || create
    else
      create
    end
  end

  private

  attr_reader :context

  def cookies = context.cookies

  def find
    User.for_id(stored_user_token).take
  end

  def stored_user_token? = stored_user_token.present?

  def stored_user_token
    @stored_user_token ||= cookies[:user_token]
  end

  def create
    User.create.tap { |new_user| store_user_token(user_token: new_user.id) }
  end

  def store_user_token(user_token:)
    cookies.permanent[:user_token] = {
      value: user_token,
      secure: App.production?,
      httponly: true,
    }
  end
end
