# frozen_string_literal: true

# Guest acts as a stand-in for a {User} model, up until the moment a user
# actively participates in a {Game}. i.e. a Guest is a non-participant.
#
# Guests are not stored in the database, but they are initialized with a
# {#token} (UUID)--generated by {Guest::Current.call}--which is then stored as a
# cookie for consistent association with a particular browser session (much like
# a {User}).
#
# @see Guest::Current
class Guest
  DESIGNATION = "GMS" # Guest MineSweeper
  public_constant :DESIGNATION

  TOKEN_SENTINEL = "G"
  public_constant :TOKEN_SENTINEL

  extend ActiveModel::Naming

  attr_reader :token

  def initialize(token:)
    @token = token
  end

  # Needed for e.g. `dom_id(guest)`
  def to_key = [token]

  def identifier = internal_token
  def mms_id = "#{DESIGNATION}-#{internal_token}"
  def time_zone = nil

  # Indicates that this is not a {User} object.
  def participant? = false

  def active_participant_in?(*) = false
  def not_a_signer? = true
  def ever_signed? = false

  private

  def internal_token
    @internal_token ||= token[TOKEN_SENTINEL.size..]
  end
end
