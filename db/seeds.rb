# frozen_string_literal: true

# This file should ensure the existence of records required to run the
# application in every environment (production, development, test). The code
# here should be idempotent so that it can be executed at any point in every
# environment.The data can then be loaded with the bin/rails db:seed command (or
# created alongside the database with db:setup).

def report(record)
  action =
    if record.just_created?
      "Created"
    elsif record.previous_changes.any?
      "Updated"
    else
      "Maintained"
    end
  puts(" -> #{action} #{record.inspect}")
end

Pattern.find_or_create_by!(name: "Ruby") { |new_pattern|
  new_pattern.settings = { width: 18, height: 15 }
  new_pattern.coordinates_array = [
    [3, 1], [4, 1], [5, 1], [6, 1], [7, 1], [8, 1], [9, 1], [10, 1], [11, 1], [12, 1], [13, 1], [14, 1],
    [2, 2], [6, 2], [11, 2], [15, 2],
    [1, 3], [5, 3], [12, 3], [16, 3],
    [1, 4], [4, 4], [13, 4], [16, 4],
    [1, 5], [2, 5], [3, 5], [4, 5], [5, 5], [6, 5], [7, 5], [8, 5], [9, 5], [10, 5], [11, 5], [12, 5], [13, 5], [14, 5], [15, 5], [16, 5],
    [1, 6], [3, 6], [14, 6], [16, 6],
    [2, 7], [4, 7], [13, 7], [15, 7],
    [3, 8], [5, 8], [12, 8], [14, 8],
    [4, 9], [6, 9], [11, 9], [13, 9],
    [5, 10], [7, 10], [10, 10], [12, 10],
    [6, 11], [8, 11], [9, 11], [11, 11],
    [7, 12], [10, 12],
    [8, 13], [9, 13]
  ]
}.tap { report(it) }

Pattern.find_or_create_by!(name: "Mine Flag") { |new_pattern|
  new_pattern.settings = { width: 25, height: 25 }
  new_pattern.coordinates_array = [
    [2, 1],
    [1, 2], [2, 2], [3, 2],
    [2, 3],
    [2, 4], [3, 4], [4, 4], [5, 4], [6, 4], [7, 4], [8, 4], [9, 4], [10, 4], [11, 4], [12, 4], [13, 4], [14, 4],
    [2, 5], [14, 5],
    [2, 6], [9, 6], [14, 6],
    [2, 7], [7, 7], [8, 7], [14, 7], [15, 7], [16, 7], [17, 7], [18, 7], [19, 7], [20, 7], [21, 7], [22, 7], [23, 7],
    [2, 8], [6, 8], [7, 8], [8, 8], [14, 8], [23, 8],
    [2, 9], [5, 9], [6, 9], [7, 9], [8, 9], [9, 9], [14, 9], [23, 9],
    [2, 10], [5, 10], [6, 10], [7, 10], [8, 10], [9, 10], [14, 10], [23, 10],
    [2, 11], [6, 11], [7, 11], [8, 11], [14, 11], [23, 11],
    [2, 12], [14, 12], [23, 12],
    [2, 13], [3, 13], [4, 13], [5, 13], [6, 13], [7, 13], [8, 13], [9, 13], [10, 13], [11, 13], [12, 13], [13, 13], [14, 13], [23, 13],
    [2, 14], [11, 14], [13, 14], [23, 14],
    [2, 15], [11, 15], [12, 15], [23, 15],
    [2, 16], [11, 16], [12, 16], [13, 16], [14, 16], [15, 16], [16, 16], [17, 16], [18, 16], [19, 16], [20, 16], [21, 16], [22, 16], [23, 16],
    [2, 17],
    [2, 18],
    [2, 19],
    [2, 20],
    [1, 21], [2, 21], [3, 21], [9, 21], [10, 21], [11, 21], [17, 21], [18, 21], [19, 21], [24, 21],
    [0, 22], [1, 22], [2, 22], [3, 22], [4, 22], [8, 22], [10, 22], [16, 22], [18, 22], [2, 22],
    [0, 23], [1, 23], [2, 23], [3, 23], [4, 23], [5, 23], [6, 23], [7, 23], [11, 23], [12, 23], [13, 23], [14, 23], [15, 23], [19, 23], [20, 23], [21, 23], [22, 23],
    [0, 24], [1, 24], [2, 24], [3, 24], [4, 24], [5, 24]
  ]
}.tap { report(it) }
